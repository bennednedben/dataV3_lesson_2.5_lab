{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "26f4703b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# SQL Queries - Lesson 2.9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1e275494",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import pymysql                        # for getting data from a SQL database\n",
    "from sqlalchemy import create_engine  # for establishing the connection and authentication\n",
    "\n",
    "from getpass import getpass  # To get the password without showing the input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4f81adfd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "········\n"
     ]
    }
   ],
   "source": [
    "# MySQL Workbench password\n",
    "password = getpass()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9b3af251",
   "metadata": {},
   "outputs": [],
   "source": [
    "connection_string = 'mysql+pymysql://root:'+password+'@localhost/sakila'\n",
    "engine = create_engine(connection_string)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ea8d088c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 1 How many distinct (different) actors' last names are there?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5aeccdea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COUNT(DISTINCT (last_name))</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>121</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   COUNT(DISTINCT (last_name))\n",
       "0                          121"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_sql_query(\"\"\"SELECT COUNT(DISTINCT (last_name))\n",
    "FROM sakila.actor;\"\"\", engine)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2af600dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2 Add an additional column day_type with values 'weekend' and 'workday' depending on the rental day of the week."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2e30e33d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rental_id</th>\n",
       "      <th>rental_date</th>\n",
       "      <th>inventory_id</th>\n",
       "      <th>customer_id</th>\n",
       "      <th>return_date</th>\n",
       "      <th>staff_id</th>\n",
       "      <th>last_update</th>\n",
       "      <th>Month</th>\n",
       "      <th>Weekday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2005-05-24 22:53:30</td>\n",
       "      <td>367</td>\n",
       "      <td>130</td>\n",
       "      <td>2005-05-26 22:04:30</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2005-05-24 22:54:33</td>\n",
       "      <td>1525</td>\n",
       "      <td>459</td>\n",
       "      <td>2005-05-28 19:40:33</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2005-05-24 23:03:39</td>\n",
       "      <td>1711</td>\n",
       "      <td>408</td>\n",
       "      <td>2005-06-01 22:12:39</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2005-05-24 23:04:41</td>\n",
       "      <td>2452</td>\n",
       "      <td>333</td>\n",
       "      <td>2005-06-03 01:43:41</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2005-05-24 23:05:21</td>\n",
       "      <td>2079</td>\n",
       "      <td>222</td>\n",
       "      <td>2005-06-02 04:33:21</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>2005-05-24 23:08:07</td>\n",
       "      <td>2792</td>\n",
       "      <td>549</td>\n",
       "      <td>2005-05-27 01:32:07</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>2005-05-24 23:11:53</td>\n",
       "      <td>3995</td>\n",
       "      <td>269</td>\n",
       "      <td>2005-05-29 20:34:53</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>2005-05-24 23:31:46</td>\n",
       "      <td>2346</td>\n",
       "      <td>239</td>\n",
       "      <td>2005-05-27 23:33:46</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>2005-05-25 00:00:40</td>\n",
       "      <td>2580</td>\n",
       "      <td>126</td>\n",
       "      <td>2005-05-28 00:22:40</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>2005-05-25 00:02:21</td>\n",
       "      <td>1824</td>\n",
       "      <td>399</td>\n",
       "      <td>2005-05-31 22:44:21</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>2005-05-25 00:09:02</td>\n",
       "      <td>4443</td>\n",
       "      <td>142</td>\n",
       "      <td>2005-06-02 20:56:02</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>2005-05-25 00:19:27</td>\n",
       "      <td>1584</td>\n",
       "      <td>261</td>\n",
       "      <td>2005-05-30 05:44:27</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>2005-05-25 00:22:55</td>\n",
       "      <td>2294</td>\n",
       "      <td>334</td>\n",
       "      <td>2005-05-30 04:28:55</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>2005-05-25 00:31:15</td>\n",
       "      <td>2701</td>\n",
       "      <td>446</td>\n",
       "      <td>2005-05-26 02:56:15</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>2005-05-25 00:39:22</td>\n",
       "      <td>3049</td>\n",
       "      <td>319</td>\n",
       "      <td>2005-06-03 03:30:22</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>2005-05-25 00:43:11</td>\n",
       "      <td>389</td>\n",
       "      <td>316</td>\n",
       "      <td>2005-05-26 04:42:11</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>2005-05-25 01:06:36</td>\n",
       "      <td>830</td>\n",
       "      <td>575</td>\n",
       "      <td>2005-05-27 00:43:36</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>2005-05-25 01:10:47</td>\n",
       "      <td>3376</td>\n",
       "      <td>19</td>\n",
       "      <td>2005-05-31 06:35:47</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>2005-05-25 01:17:24</td>\n",
       "      <td>1941</td>\n",
       "      <td>456</td>\n",
       "      <td>2005-05-31 06:00:24</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>2005-05-25 01:48:41</td>\n",
       "      <td>3517</td>\n",
       "      <td>185</td>\n",
       "      <td>2005-05-27 02:20:41</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "      <td>May</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    rental_id         rental_date  inventory_id  customer_id  \\\n",
       "0           1 2005-05-24 22:53:30           367          130   \n",
       "1           2 2005-05-24 22:54:33          1525          459   \n",
       "2           3 2005-05-24 23:03:39          1711          408   \n",
       "3           4 2005-05-24 23:04:41          2452          333   \n",
       "4           5 2005-05-24 23:05:21          2079          222   \n",
       "5           6 2005-05-24 23:08:07          2792          549   \n",
       "6           7 2005-05-24 23:11:53          3995          269   \n",
       "7           8 2005-05-24 23:31:46          2346          239   \n",
       "8           9 2005-05-25 00:00:40          2580          126   \n",
       "9          10 2005-05-25 00:02:21          1824          399   \n",
       "10         11 2005-05-25 00:09:02          4443          142   \n",
       "11         12 2005-05-25 00:19:27          1584          261   \n",
       "12         13 2005-05-25 00:22:55          2294          334   \n",
       "13         14 2005-05-25 00:31:15          2701          446   \n",
       "14         15 2005-05-25 00:39:22          3049          319   \n",
       "15         16 2005-05-25 00:43:11           389          316   \n",
       "16         17 2005-05-25 01:06:36           830          575   \n",
       "17         18 2005-05-25 01:10:47          3376           19   \n",
       "18         19 2005-05-25 01:17:24          1941          456   \n",
       "19         20 2005-05-25 01:48:41          3517          185   \n",
       "\n",
       "           return_date  staff_id         last_update Month    Weekday  \n",
       "0  2005-05-26 22:04:30         1 2006-02-15 21:30:53   May    Tuesday  \n",
       "1  2005-05-28 19:40:33         1 2006-02-15 21:30:53   May    Tuesday  \n",
       "2  2005-06-01 22:12:39         1 2006-02-15 21:30:53   May    Tuesday  \n",
       "3  2005-06-03 01:43:41         2 2006-02-15 21:30:53   May    Tuesday  \n",
       "4  2005-06-02 04:33:21         1 2006-02-15 21:30:53   May    Tuesday  \n",
       "5  2005-05-27 01:32:07         1 2006-02-15 21:30:53   May    Tuesday  \n",
       "6  2005-05-29 20:34:53         2 2006-02-15 21:30:53   May    Tuesday  \n",
       "7  2005-05-27 23:33:46         2 2006-02-15 21:30:53   May    Tuesday  \n",
       "8  2005-05-28 00:22:40         1 2006-02-15 21:30:53   May  Wednesday  \n",
       "9  2005-05-31 22:44:21         2 2006-02-15 21:30:53   May  Wednesday  \n",
       "10 2005-06-02 20:56:02         2 2006-02-15 21:30:53   May  Wednesday  \n",
       "11 2005-05-30 05:44:27         2 2006-02-15 21:30:53   May  Wednesday  \n",
       "12 2005-05-30 04:28:55         1 2006-02-15 21:30:53   May  Wednesday  \n",
       "13 2005-05-26 02:56:15         1 2006-02-15 21:30:53   May  Wednesday  \n",
       "14 2005-06-03 03:30:22         1 2006-02-15 21:30:53   May  Wednesday  \n",
       "15 2005-05-26 04:42:11         2 2006-02-15 21:30:53   May  Wednesday  \n",
       "16 2005-05-27 00:43:36         1 2006-02-15 21:30:53   May  Wednesday  \n",
       "17 2005-05-31 06:35:47         2 2006-02-15 21:30:53   May  Wednesday  \n",
       "18 2005-05-31 06:00:24         1 2006-02-15 21:30:53   May  Wednesday  \n",
       "19 2005-05-27 02:20:41         2 2006-02-15 21:30:53   May  Wednesday  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_sql_query(\"\"\"SELECT *, DATE_FORMAT(rental_date, \"%%M\") AS 'Month', DATE_FORMAT(rental_date, \"%%W\") AS 'Weekday'\n",
    "FROM sakila.rental\n",
    "LIMIT 20;\"\"\", engine)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8592aaf7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 3 Get all films with ARMAGEDDON in the title."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4abfb5dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ARMAGEDDON LOST</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LADYBUGS ARMAGEDDON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>METAL ARMAGEDDON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MOSQUITO ARMAGEDDON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>STAGECOACH ARMAGEDDON</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>STEERS ARMAGEDDON</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   title\n",
       "0        ARMAGEDDON LOST\n",
       "1    LADYBUGS ARMAGEDDON\n",
       "2       METAL ARMAGEDDON\n",
       "3    MOSQUITO ARMAGEDDON\n",
       "4  STAGECOACH ARMAGEDDON\n",
       "5      STEERS ARMAGEDDON"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_sql_query(\"\"\"SELECT title\n",
    "FROM sakila.film\n",
    "WHERE title LIKE '%%ARMAGEDDON%%';\"\"\", engine)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "47e43a0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 4 Get 10 the longest films."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1ed6e873",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>max duration</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>DARN FORRESTER</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>POND SEATTLE</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CHICAGO NORTH</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MUSCLE BRIGHT</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>WORST BANGER</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>GANGS PRIDE</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>SOLDIERS EVOLUTION</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>HOME PITY</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>SWEET BROTHERHOOD</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>CONTROL ANTHEM</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                title  max duration\n",
       "0      DARN FORRESTER           185\n",
       "1        POND SEATTLE           185\n",
       "2       CHICAGO NORTH           185\n",
       "3       MUSCLE BRIGHT           185\n",
       "4        WORST BANGER           185\n",
       "5         GANGS PRIDE           185\n",
       "6  SOLDIERS EVOLUTION           185\n",
       "7           HOME PITY           185\n",
       "8   SWEET BROTHERHOOD           185\n",
       "9      CONTROL ANTHEM           185"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_sql_query(\"\"\"SELECT title, length AS 'max duration'\n",
    "FROM sakila.film\n",
    "ORDER BY length DESC\n",
    "LIMIT 10;\"\"\", engine)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a49a8500",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 5 How many films include Behind the Scenes content?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "552f7d94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COUNT(DISTINCT(title))</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>538</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   COUNT(DISTINCT(title))\n",
       "0                     538"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_sql_query(\"\"\"SELECT COUNT(DISTINCT(title))\n",
    "FROM sakila.film\n",
    "WHERE special_features LIKE '%%Behind the Scenes%%';\"\"\", engine)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43d5d896",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 6 Which kind of movies (rating) have a mean duration of more than two hours?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f62bfe8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rating</th>\n",
       "      <th>avg_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>PG-13</td>\n",
       "      <td>120.4439</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  rating  avg_length\n",
       "0  PG-13    120.4439"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_sql_query(\"\"\"SELECT rating, AVG(length) AS avg_length\n",
    "FROM sakila.film\n",
    "GROUP BY rating\n",
    "HAVING avg_length>120;\"\"\", engine)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b1a5085b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 7 Rank films by length (filter out the rows that have nulls or 0s in length column). \n",
    "# In your output, only select the columns title, length, and the rank."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "22b5d436",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>length</th>\n",
       "      <th>ranking</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CHICAGO NORTH</td>\n",
       "      <td>185</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CONTROL ANTHEM</td>\n",
       "      <td>185</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>DARN FORRESTER</td>\n",
       "      <td>185</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>GANGS PRIDE</td>\n",
       "      <td>185</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HOME PITY</td>\n",
       "      <td>185</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>ALIEN CENTER</td>\n",
       "      <td>46</td>\n",
       "      <td>996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>IRON MOON</td>\n",
       "      <td>46</td>\n",
       "      <td>996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>KWAI HOMEWARD</td>\n",
       "      <td>46</td>\n",
       "      <td>996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>LABYRINTH LEAGUE</td>\n",
       "      <td>46</td>\n",
       "      <td>996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>RIDGEMONT SUBMARINE</td>\n",
       "      <td>46</td>\n",
       "      <td>996</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   title  length  ranking\n",
       "0          CHICAGO NORTH     185        1\n",
       "1         CONTROL ANTHEM     185        1\n",
       "2         DARN FORRESTER     185        1\n",
       "3            GANGS PRIDE     185        1\n",
       "4              HOME PITY     185        1\n",
       "..                   ...     ...      ...\n",
       "995         ALIEN CENTER      46      996\n",
       "996            IRON MOON      46      996\n",
       "997        KWAI HOMEWARD      46      996\n",
       "998     LABYRINTH LEAGUE      46      996\n",
       "999  RIDGEMONT SUBMARINE      46      996\n",
       "\n",
       "[1000 rows x 3 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_sql_query('''select title, length, RANK() OVER(ORDER BY length DESC) as ranking from sakila.film;''', engine)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c675e2a9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8350a502",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
